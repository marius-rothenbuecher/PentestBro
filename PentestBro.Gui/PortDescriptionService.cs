using System;
using System.Collections.Generic;
using System.IO;
using PentestBro.Gui.Displays;
using ServiceStack.Text;

namespace PentestBro.Gui
{
    public class PortDescriptionService
    {
        private const string PortDescriptionFilePath = "./PortDescription.csv";

        public IDictionary<ushort, PortDescription> PortDescriptions { get; } = new Dictionary<ushort, PortDescription>();

        public PortDescriptionService()
        {
            var fileReader = new StreamReader(PortDescriptionFilePath);
            var internalPortDescriptions = CsvSerializer.DeserializeFromReader<List<InternalPortDescription>>(fileReader);

            foreach (var internalPortDescription in internalPortDescriptions)
            {
                var port = internalPortDescription.Port;
                var description = internalPortDescription.Description;

                if (port.Contains("-"))
                {
                    var ports = port.Split('-');
                    var startPort = Convert.ToUInt16(ports[0]);
                    var endPort = Convert.ToUInt16(ports[1]);

                    for (var portNumber = startPort; portNumber < endPort; portNumber++)
                    {
                        var portDescription = new PortDescription(portNumber, description);
                        this.AddPortDescription(portDescription);
                    }
                }
                else
                {
                    var portDescription = new PortDescription(Convert.ToUInt16(port), description);
                    this.AddPortDescription(portDescription);
                }
            }
        }

        private void AddPortDescription(PortDescription portDescription)
        {
            if (this.PortDescriptions.ContainsKey(portDescription.Port))
            {
                var description = this.PortDescriptions[portDescription.Port].Description;
                var newDescription = $"{description} ¦ {portDescription.Description}";
                this.PortDescriptions[portDescription.Port].Description = newDescription;
            }
            else
            {
                this.PortDescriptions.Add(portDescription.Port, portDescription);
            }
        }
    }

    internal class InternalPortDescription
    {
        public string Port { get; set; }
        public string Description { get; set; }
    }
}
