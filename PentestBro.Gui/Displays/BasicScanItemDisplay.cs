using PentestBro.Gui.Properties;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization;

namespace PentestBro.Gui.Displays
{
    public class BasicScanItemDisplay : INotifyPropertyChanged
    {
        private bool isBannerScanRunning;
        private bool isPortScanRunning;

        public BasicScanItemDisplay(string ipAddress)
        {
            this.IPAddress = ipAddress;
        }

        public string IPAddress { get; set; }
        
        public ObservableCollection<DomainDisplay> DomainDisplays { get; set; } = new ObservableCollection<DomainDisplay>();
        public ObservableCollection<PortDescription> PortDescriptions { get; set; } = new ObservableCollection<PortDescription>();

        [IgnoreDataMember]
        public bool IsBannerScanRunning
        {
            get
            {
                return this.isBannerScanRunning;
            }
            set
            {
                this.isBannerScanRunning = value;
                this.OnPropertyChanged();
            }
        }

        [IgnoreDataMember]
        public bool IsPortScanRunning
        {
            get
            {
                return this.isPortScanRunning;
            }
            set
            {
                this.isPortScanRunning = value;
                this.OnPropertyChanged();
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        [NotifyPropertyChangedInvocator]
        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            this.PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}