using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using PentestBro.Gui.Properties;
using PentestBro.Model.Web;

namespace PentestBro.Gui.Displays
{
    public class WebScanItemDisplay : INotifyPropertyChanged
    {
        private bool isPathScanRunning;
        private bool isRobotsScanRunning;

        public WebScanItemDisplay(HttpUrl httpUrl)
        {
            this.HttpUrl = httpUrl;
        }

        public HttpUrl HttpUrl { get; set; }

        public ObservableCollection<HttpUrl> PathResults { get; set; } = new ObservableCollection<HttpUrl>();
        public ObservableCollection<RobotsResult> RobotsResults { get; set; } = new ObservableCollection<RobotsResult>();
        public ObservableCollection<string> ErrorContentStrings { get; set; } = new ObservableCollection<string>();

        [IgnoreDataMember]
        public bool IsPathScanRunning
        {
            get
            {
                return this.isPathScanRunning;
            }
            set
            {
                this.isPathScanRunning = value;
                this.OnPropertyChanged();
            }
        }

        [IgnoreDataMember]
        public bool IsRobotsScanRunning
        {
            get
            {
                return this.isRobotsScanRunning;
            }
            set
            {
                this.isRobotsScanRunning = value;
                this.OnPropertyChanged();
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        [NotifyPropertyChangedInvocator]
        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            this.PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
