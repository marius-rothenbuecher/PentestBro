using PentestBro.Gui.Properties;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using PentestBro.Model;

namespace PentestBro.Gui.Displays
{
    public class PortDescription : INotifyPropertyChanged
    {
        private Layer4ProtocolType protocol;
        private string banner;

        public event PropertyChangedEventHandler PropertyChanged;

        public PortDescription(ushort port, string description)
        {
            this.Port = port;
            this.Description = description;
        }

        public ushort Port { get; set; }
        public string Description { get; set; }

        public Layer4ProtocolType Protocol
        {
            get
            {
                return this.protocol;
            }
            set
            {
                this.protocol = value;
                this.OnPropertyChanged();
            }
        }

        public string Banner
        {
            get
            {
                return this.banner;
            }
            set
            {
                this.banner = value;
                this.OnPropertyChanged();
            }
        }

        public PortDescription Clone()
        {
            return new PortDescription(this.Port, this.Description)
            {
                Banner = this.Banner,
                Protocol = this.Protocol,
            };
        }

        [NotifyPropertyChangedInvocator]
        protected virtual void OnPropertyChanged([CallerMemberName]string propertyName = null)
        {
            this.PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
