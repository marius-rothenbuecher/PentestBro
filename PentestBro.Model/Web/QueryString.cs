using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace PentestBro.Model.Web
{
    public class QueryString : IEnumerable, IEnumerator
    {
        private Dictionary<string, List<string>> variables = new Dictionary<string, List<string>>();
        private int position = -1;

        public List<string> this[string name] => this.variables[name];

        public void Add(string name, List<string> values)
        {
            this.variables.Add(name, values);
        }

        public IEnumerator GetEnumerator()
        {
            return this;
        }

        public override string ToString()
        {
            if (this.variables.Any())
                return $"?{string.Join("&", this.variables.Select(x => $"{x.Key}={string.Join(",", x.Value)}"))}";

            return string.Empty;
        }

        public bool ContainsKey(string name)
        {
            return this.variables.ContainsKey(name);
        }

        public bool MoveNext()
        {
            this.position++;
            return (this.position < this.variables.Count());
        }

        public void Reset()
        {
            this.position = 0;
        }

        public object Current => this.variables.ElementAt(this.position);

        public bool Any()
        {
            return this.variables.Any();
        }
    }
}