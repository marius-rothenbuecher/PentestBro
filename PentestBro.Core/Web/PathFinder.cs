using System.Collections.Generic;
using System.IO;
using PentestBro.Model.Web;

namespace PentestBro.Core.Web
{
    public class PathFinder
    {
        private const string DictionariesPath = "./Dictionaries/";
        private readonly Browser browser = Browser.Instance;
        private readonly IList<string> dictionaryFilePaths = new List<string>();

        public PathFinder(IList<string> dictionaryFilePaths = null)
        {
            if (dictionaryFilePaths != null)
            {
                this.dictionaryFilePaths = dictionaryFilePaths;
            }
            else
            {
                var filePaths = Directory.GetFiles(DictionariesPath);

                foreach (var filePath in filePaths)
                    this.dictionaryFilePaths.Add(filePath);
            }
        }

        public IList<HttpUrl> Find(HttpUrl sourcehttpUrl, List<string> errorStrings)
        {
            var httpUrls = new List<HttpUrl>();
            
            foreach (var filePath in this.dictionaryFilePaths)
            {
                var file = new StreamReader(filePath);
                string relativeFilePath;

                while ((relativeFilePath = file.ReadLine()) != null)
                {
                    var httpUrl = UrlParser.GetHttpUrl(sourcehttpUrl, "/" + relativeFilePath);
                    var response = this.browser.LoadWebsite(httpUrl.FullUrl, errorStrings);

                    if (response.IsSuccessStatusCode)
                        httpUrls.Add(httpUrl);
                }
            }

            return httpUrls;
        }
    }
}
